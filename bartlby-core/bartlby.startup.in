#!/bin/sh
#
# poor man's bartlby startup script
#


BTL_DIR=${BARTLBY_HOME:-'@prefix@'}
BIN_DIR="bin/"
ETC_DIR="etc/"

ulimit -c 1000
export MALLOC_CHECK_=2


function getConfigValue {
	if [ ! -f $BTL_DIR/${ETC_DIR}bartlby.cfg ];
	then
		raiseErr "Config $BTL_DIR/${ETC_DIR}bartlby.cfg doesnt look like a file"  3
		
	fi;
	
	r=`cat $BTL_DIR/${ETC_DIR}bartlby.cfg |grep "^${1}"|awk -F"=" '{print \$2}'`
	echo $r;

}

function bartlby_status {
	if [ -f $1 ]; then
		echo "PID file:                 [exists ]";
	else
		echo "PID file:                 [missing]";
		exit;
	fi;
	OUTP=$(${BTL_DIR}/${BIN_DIR}bartlby_shmt $BTL_DIR/${ETC_DIR}bartlby.cfg status)
	if [ $? = 2 ];
	then
		echo "Cannot find SHM segment, remove the pid file and starup bartlby again";
	else
		echo $OUTP|awk '{print "SHMID: " $1; print "Service # " $2; print "Worker # " $3; print "downtime # " $4; print "running: " $5}';
		echo "run as $USER";
	fi;
	MYPID=$(cat $1);
	if [ ! -f /proc/$MYPID/cmdline ];
	then
		echo ">>>>>>>> Found a pid file and a shm segment";
		echo ">>>>>>>> but the processs doesnt look to run";
		echo ">>>>>>>> Remove pidfile and './bartlby.startup remove'";
	fi;
	
}


function remove_bartlby {
	OUTP=$(${BTL_DIR}/${BIN_DIR}bartlby_shmt $BTL_DIR/${ETC_DIR}bartlby.cfg status)
	SHMID=$(echo $OUTP|awk '{print $1}');
	ipcrm shm $SHMID;
	echo "Removed: $SHMID";
	rm -f $1;
}

function start_bartlby  {
	
	OUTP=$(${BTL_DIR}/${BIN_DIR}bartlby_shmt $BTL_DIR/${ETC_DIR}bartlby.cfg status)
	SEXCODE=$?;
	
	if [ -f $1 ]; then
		if [ $SEXCODE = 2 ];
		then
			#SHM is broken or not here so well remove pid file
			rm $1;
		else	
		
			echo "PIDFILE: $1 exists (remove it and rerun start)";
			echo "SHM found: $OUTP";
			exit 3;
		fi;
	fi;
	
	echo "starting bartlby";
	if [ $SEXCODE = 1 ];
	then
		echo "SHM already existing you should remove it";
		echo "run ./bartlby.startup remove";
		exit 2;
	fi;
	
	LOGDIR=`getConfigValue "logfile"|tr -d [:cntrl:]`;
	RUSER=`getConfigValue "user"|tr -d [:cntrl:]`;
	#Check if LogPermission is OK
	PRECMD="";
	POSTCMD="";
	
	if [ "$USER" != "$RUSER" ];
	then
		su -c "${BTL_DIR}/${BIN_DIR}bartlby $BTL_DIR/${ETC_DIR}bartlby.cfg" - $RUSER
	else
		${BTL_DIR}/${BIN_DIR}bartlby $BTL_DIR/${ETC_DIR}bartlby.cfg
	fi;
	
	

}
function reload_bartlby {
        echo "reloading bartlby";
        if [ ! -f $1 ];  then
                if [ "${2}x" = "x" ];
                then
                        echo "PIDFILE $1 does not exists";
                        exit 4;
                fi;
        fi;
        BART_PID=`cat $1`;
        kill -USR2 $BART_PID

}


function stop_bartlby {
	echo "stopping bartlby";
	if [ ! -f $1 ];  then
		if [ "${2}x" = "x" ];
		then
			echo "PIDFILE $1 does not exists";
			exit 4;
		fi;
	fi;
	BART_PID=`cat $1`;
	kill -USR1 $BART_PID
	
}


function raiseErr {
	echo $1;
	exit $2;
}

if [ ! -d $BTL_DIR ]; then
	raiseErr "Dir $BTL_DIR does not exist" 2
	
fi;

cd $BTL_DIR;
PIDDIR=`getConfigValue "pidfile_dir"|tr -d [:cntrl:]`;

PIDNAME=$PIDDIR/bartlby.pid




case $1 in
	start)
		
		start_bartlby $PIDNAME;;
	startwithout)
		start_bartlby $PIDNAME no;;
	reload)
		reload_bartlby $PIDNAME;;
	stop)
		
		stop_bartlby $PIDNAME;;
	restart)
		stop_bartlby $PIDNAME;
		sleep 5;
		remove_bartlby $PIDNAME;
		sleep 5;
		start_bartlby $PIDNAME;;
	restartwithout)
		stop_bartlby $PIDNAME no;
		sleep 5;
		remove_bartlby $PIDNAME;
		sleep 5;
		start_bartlby $PIDNAME no;;	
	status) 
		bartlby_status $PIDNAME;;
	remove)
		remove_bartlby $PIDNAME;;
	*)
		echo "bartlby.startup [stop|start|restart|status]"
		

esac

















