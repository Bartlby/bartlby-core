#!/bin/bash
BARTLBY_HOME=@prefix@
XMYSQL_HOST=@MYSQL_HOST@
XMYSQL_USER=@MYSQL_USER@
XMYSQL_PASS=@MYSQL_PASS@
XMYSQL_DB=@MYSQL_DB@



useradd bartlby 
chown -R bartlby ${BARTLBY_HOME}
chmod -R a+rw ${BARTLBY_HOME}/var/
chmod a+rw ${BARTLBY_HOME}/etc/bartlby.cfg



#CHECK FOR MySQLDiff 
type -a mysqldiff

if [ $? = 1 ];
then
        echo "MySQL Diff not installed ... fetch and install it"
        wget http://search.cpan.org/CPAN/authors/id/A/AS/ASPIERS/MySQL-Diff-0.43.tar.gz
        tar xzvf MySQL-Diff-0.43.tar.gz
        cd MySQL-Diff-0.43
        perl Makefile.PL
        make install

fi;



function install_portier {
	
	echo "------------------------------------------------------";
	echo "Installing Bartlby-Portier (Port: 9031)";
	echo "------------------------------------------------------";

	echo "registering service (bartlbyp 9031)";
	grep -sqe "^bartlbyp" /etc/services
	EX=$?;
	
	if [ $EX = 1 ];
	then
		echo "bartlbyp                9031/tcp                        #Bartlby Portier" >> /etc/services
		echo "DONE";
	else
		echo "Already existing!";
	fi;
	

	
	
	echo "------------------------------------------------------";
	
	if [ -f /etc/inetd.conf ];
	then
		echo "Checking service in inetd.conf";
		grep -sqe "^bartlbyp" /etc/inetd.conf
		EX=$?;
		if [ $EX = 1 ];
		then
			echo "bartlbyp                stream  tcp     nowait.500      bartlby  ${BARTLBY_HOME}/bin/bartlby_portier ${BARTLBY_HOME}/etc/bartlby.cfg" >> /etc/inetd.conf
			echo "DONE ... restarting inetd";
			if [ -f /etc/init.d/openbsd-inetd ];
			then
				echo "detected openbsd-inetd";
				echo "....restarting openbsd-inetd"
				/etc/init.d/openbsd-inetd restart
			else
				/etc/init.d/inetd restart
			fi;
		else
			echo "Already existing";
		fi;
	
	else
		echo "Checking service in /etc/xinetd.d/";
		if [ ! -f /etc/xinetd.d/bartlbyp ];
		then
	
			echo "service bartlbyp" > /etc/xinetd.d/bartlbyp
			echo "{" >> /etc/xinetd.d/bartlbyp
			echo "        disable                 = no" >> /etc/xinetd.d/bartlbyp
			echo "        port                    = 9030" >> /etc/xinetd.d/bartlbyp
			echo "        socket_type             = stream" >> /etc/xinetd.d/bartlbyp
			echo "        protocol                = tcp" >> /etc/xinetd.d/bartlbyp
			echo "        wait                    = no" >> /etc/xinetd.d/bartlbyp
			echo "        user                    = root" >> /etc/xinetd.d/bartlbyp
			echo "        server                  = ${BARTLBY_HOME}/bin/bartlby_portier" >> /etc/xinetd.d/bartlbyp
			echo "        server_args             = ${BARTLBY_HOME}/etc/bartlby.cfg" >> /etc/xinetd.d/bartlbyp
			echo "}" >> /etc/xinetd.d/bartlbyp
		echo "DONE ... restarting xinetd";
		/etc/init.d/xinetd restart
			
		else
			echo "already existing";
		fi;
	fi;


	
	
}

function start_it_up {
	$BARTLBY_HOME/etc/bartlby.startup stop 2>&1 >> /dev/null
	$BARTLBY_HOME/etc/bartlby.startup remove 2>&1 >> /dev/null
	
	
	echo "--------------------------------------------------------------";
	$BARTLBY_HOME/etc/bartlby.startup start
	echo "--------------------------------------------------------------";
	echo "";
	echo "";
	
	install_portier;
	
	
	echo "####################################################";
	echo "####################################################";
	echo "###              DONE                            ###";
	echo "###   proceed installing bartlby-php, bartlby-ui ###";
	echo "####################################################";
	echo "####################################################";
	
	
}

echo "--------------------------------------------------------------";
echo -n "What type of installation is this: [(i) install or upgrade, (e)xit post-setup][i]:";
read INST_TYPE;
case $INST_TYPE in

	u) echo "install upgrade";;
	e) echo "Dont run post install steps";;
	*) INST_TYPE="u"; echo "default INSTALL";;
esac;

echo "--------------------------------------------------------------";
echo "";

if [ "$INST_TYPE" = "e" ];
then
	echo "--------------------------------------------------------------";
	echo "exiting now!!!";
	echo "you HAVE to restart bartlby that the upgraded binarys get loaded";
	echo "--------------------------------------------------------------";
	echo "";
	exit;
fi;




echo "####################################################";
echo "####################################################";
echo "###              Bartlby Setup                   ###";
echo "####################################################";
echo "####################################################";
echo " You are now asked to fill in the username and ";
echo " password of the 'root' mysql user, or at ";
echo " least someone who can DROP and CREATE databases";
echo "####################################################";

echo "--------------------------------------------------------------";
echo -n "do database create/upgrade [y/n](y):";
read DO_DB_STUFF;
echo "--------------------------------------------------------------";
echo "";
if [ "x$DO_DB_STUFF" = "x" ];
then
	DO_DB_STUFF="y";
fi;

if [ "$DO_DB_STUFF" = "y" ];
then

MY_MYSQL=$(type -P mysql|tr -d [:blank:]);
MYSQL_FOUND="true";

if [ ! -x "$MY_MYSQL" ];
then
	MYSQL_FOUND="false";
fi;


while [ "$MYSQL_FOUND" = "false" ];
do
	echo "--------------------------------------------------------------";
	echo -n "mysql is not in path please give path to 'mysql' binary:";
	read MY_MYSQL;
	echo "--------------------------------------------------------------";
	
	if [ -x $MY_MYSQL ];
	then
		MYSQL_FOUND="true";	
	else
		MYSQL_FOUND="false";
	fi;
	
	
done;

MYSQL_OK=1;

while [ $MYSQL_OK = 1 ];
do

	#ok lets start a php script :-), its easier to manipulate mysql things
	echo "--------------------------------------------------------------";
	echo -n "Give username:";
	read MYSQL_USER;
	echo "--------------------------------------------------------------";
	echo "";
	echo "";
	echo "--------------------------------------------------------------";
	echo -n "Give password:";
	read MYSQL_PASSWORD;
	echo "--------------------------------------------------------------";
	echo "";
	echo "";
	echo "--------------------------------------------------------------";
	echo -n "Give host:";
	read MYSQL_HOST;
	echo "--------------------------------------------------------------";
	echo "";
	echo "";
	echo "--------------------------------------------------------------";
	echo -n "Give database name:";
	read MYSQL_DB;
	
	
	echo "--------------------------------------------------------------";
	echo "";
	echo "";
	
	MYSQL_COMMAND="$MY_MYSQL -u $MYSQL_USER --password=$MYSQL_PASSWORD -h $MYSQL_HOST";
cat << MYSQL_SCRIPT | $MYSQL_COMMAND; 
select 1;
MYSQL_SCRIPT
MYSQL_OK=$?;
	
done;

perl -i -pe "s#mysql_host=.*#mysql_host=$MYSQL_HOST#" $BARTLBY_HOME/etc/bartlby.cfg
perl -i -pe "s#mysql_user=.*#mysql_user=$MYSQL_USER#" $BARTLBY_HOME/etc/bartlby.cfg
perl -i -pe "s#mysql_pw=.*#mysql_pw=$MYSQL_PASSWORD#" $BARTLBY_HOME/etc/bartlby.cfg
perl -i -pe "s#mysql_db=.*#mysql_db=$MYSQL_DB#" $BARTLBY_HOME/etc/bartlby.cfg





cat << MYSQL | $MYSQL_COMMAND -D $MYSQL_DB
	select 1;
MYSQL

EX=$?;

#if this is ok a database exists woooops?
if [ $EX != 1 ];
then
	echo "--------------------------------------------------------------";
	echo "DB Already exists attempting to patch";
	echo "--------------------------------------------------------------";
	echo "";
	echo "";
	mysqldiff  --host=$MYSQL_HOST --user=$MYSQL_USER --password=$MYSQL_PASSWORD db:$MYSQL_DB $BARTLBY_HOME/mysql.shema
	echo -n "Apply Patch [y/n]";
  read stopit;
  if [ "$stopit" != "n" ];
  then
  	 mysqldiff  --host=$MYSQL_HOST --user=$MYSQL_USER --password=$MYSQL_PASSWORD db:$MYSQL_DB $BARTLBY_HOME/mysql.shema |$MYSQL_COMMAND -D $MYSQL_DB
   	echo "DB Patching done";
  fi;

	start_it_up;	
	exit;
	fi;
fi;



cat << MYSQL|$MYSQL_COMMAND

create database $MYSQL_DB;

MYSQL


cat $BARTLBY_HOME/mysql.shema|$MYSQL_COMMAND -D $MYSQL_DB;

echo "--------------------------------------------------------------";
echo "done setting up database";
echo "--------------------------------------------------------------";
echo "";
echo "";

start_it_up;	




exit 0
